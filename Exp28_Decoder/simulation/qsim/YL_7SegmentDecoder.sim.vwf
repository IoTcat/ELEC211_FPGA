/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 30000.0;
	SIMULATION_TIME = 30000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clear")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ent")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_A")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_A1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_B")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_B2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_C")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_C3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_D")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_D4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_E")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_E5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_F")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_F6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_G")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT_G7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clear")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 26880.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 2480.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1500;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("ent")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 16640.0;
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 9520.0;
	}
}

TRANSITION_LIST("OUTPUT_A")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 720.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 4560.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 720.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 490.0;
	}
}

TRANSITION_LIST("OUTPUT_A1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1430.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 8640.0;
		LEVEL 1 FOR 5280.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2020.0;
		LEVEL 1 FOR 1090.0;
	}
}

TRANSITION_LIST("OUTPUT_B")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 590.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 4080.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 600.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 250.0;
	}
}

TRANSITION_LIST("OUTPUT_B2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7190.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 5760.0;
		LEVEL 1 FOR 5280.0;
		LEVEL 0 FOR 8890.0;
	}
}

TRANSITION_LIST("OUTPUT_C")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 230.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 1320.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 5160.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 1320.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1320.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 730.0;
	}
}

TRANSITION_LIST("OUTPUT_C3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2870.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 19680.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 4570.0;
	}
}

TRANSITION_LIST("OUTPUT_D")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		NODE
		{
			REPEAT = 45;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 4080.0;
		NODE
		{
			REPEAT = 17;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 840.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 130.0;
	}
}

TRANSITION_LIST("OUTPUT_D4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1430.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1440.0;
			LEVEL 0 FOR 2880.0;
		}
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 6720.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2020.0;
		LEVEL 1 FOR 1090.0;
	}
}

TRANSITION_LIST("OUTPUT_E")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 360.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 120.0;
				LEVEL 1 FOR 120.0;
			}
			LEVEL 0 FOR 360.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 360.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
		}
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 3960.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 360.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 360.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 120.0;
				LEVEL 1 FOR 120.0;
			}
		}
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 360.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
		}
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("OUTPUT_E5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1430.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 4320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1440.0;
			LEVEL 1 FOR 1440.0;
		}
		LEVEL 0 FOR 8160.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1460.0;
		LEVEL 0 FOR 2020.0;
		LEVEL 1 FOR 1090.0;
	}
}

TRANSITION_LIST("OUTPUT_F")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 360.0;
			LEVEL 0 FOR 360.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 4200.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 600.0;
			LEVEL 1 FOR 360.0;
			LEVEL 0 FOR 360.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 130.0;
	}
}

TRANSITION_LIST("OUTPUT_F6")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1430.0;
		LEVEL 1 FOR 4320.0;
		LEVEL 0 FOR 4320.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 11040.0;
		LEVEL 1 FOR 4320.0;
		LEVEL 0 FOR 2040.0;
		LEVEL 1 FOR 1090.0;
	}
}

TRANSITION_LIST("OUTPUT_G")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 230.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 600.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 4440.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 840.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 130.0;
	}
}

TRANSITION_LIST("OUTPUT_G7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2870.0;
		LEVEL 0 FOR 7200.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 9600.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 2900.0;
		LEVEL 1 FOR 3110.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clear";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ent";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_A";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_B";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_C";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_D";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_E";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_F";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_G";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_A1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_B2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_C3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_D4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_E5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_F6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT_G7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
